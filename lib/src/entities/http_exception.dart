// Copyright 2024 JotapeTecnologia

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/// Class that handles the known errors generated by the request on the server.
///
/// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
///
/// Errors that are known are treated as a subtype of an [Exception].
///
/// It can indicate different scenarios. Some of them are mapped as a specific
/// exception, such as:
///
/// - 400 - [HttpExceptionBadRequest]
/// - 401 - [HttpExceptionUnauthorized]
/// - 403 - [HttpExceptionForbidden]
/// - 404 - [HttpExceptionNotFound]
/// - 405 - [HttpExceptionMethodNotAllowed]
/// - 408 - [HttpExceptionRequestTimeout]
/// - 415 - [HttpExceptionUnsupportedMediaType]
/// - 500 - [HttpExceptionInternalServerError]
base class HttpException {
  /// The exception's response code generated by the request on the server.
  ///
  /// It can indicate different scenarios. Some of them are mapped as a specific
  /// exception, such as:
  ///
  /// - 400 (Bad Request)
  /// - 401 (Unauthorized)
  /// - 403 (Forbidden)
  /// - 404 (Not Found)
  /// - 405 (Method Not Allowed)
  /// - 408 (Request Timeout)
  /// - 415 (Unsupported Media Type)
  /// - 500 (Internal Server Error)
  final int statusCode;

  /// The exception's response message generated by the request on the server.
  ///
  /// It can indicate different scenarios. Some of them are mapped as a specific
  /// exception, such as:
  ///
  /// - Bad Request (400)
  /// - Unauthorized (401)
  /// - Forbidden (403)
  /// - Not Found (404)
  /// - Method Not Allowed (405)
  /// - Request Timeout (408)
  /// - Unsupported Media Type (415)
  /// - Internal Server Error (500)
  final String statusMessage;

  const HttpException({
    required this.statusCode,
    required this.statusMessage,
  }) : assert(
          statusCode > 399 && statusCode < 600,
          '[ HttpException ] > Invalid Error Status Code',
        );
}
